(defparameter *pops* '((peasants (100 100))
                       (builders (20  100))
                       (traders  (10  100))
                       (soldiers (25  100))))
(defun get-pop-count (pop-type)
  (caadr (assoc pop-type *pops*)))
(defun get-pop-happy (pop-type)
  (cadadr (assoc pop-type *pops*)))
(defun set-pop-count (pop-type amount)
  (setf (caadr (assoc pop-type *pops*)) amount))
(defun set-pop-happy (pop-type amount)
  (setf (cadadr (assoc pop-type *pops*)) amount))
(defun alt-pop-count (pop-type f)
  (setf (caadr (assoc pop-type *pops*)) (apply #'f 

(defparameter *town-cond* '((wall (0))
                            (granary (100))
                            (castle (100))
                            (barracks (100))
                            (homes (100))
                            (farms (100))))

(defparameter *months* '((december  . 0)
                        (january   . 1)
                        (february  . 2)
                        (march     . 3)
                        (april     . 4)
                        (may       . 5)
                        (june      . 6)
                        (july      . 7)
                        (august    . 8)
                        (september . 9)
                        (october   . 10)
                        (november  . 11)))

(defparameter *current-month* 'december)

(defun season ()
  (let (month (car (assoc *current-month* *months*)))
    (cond ((<= month 2) 'winter)
          ((<= month 5) 'spring)
          ((<= month 8) 'summer)
          (t            'autumn))))

